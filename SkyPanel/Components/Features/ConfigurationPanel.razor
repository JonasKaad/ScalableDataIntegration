@inject IDialogService DialogService
@inject ISnackbar Snackbar

<div style="position: relative;">
    @if (_isLoading)
    {
    <MudOverlay Visible="true" Absolute="true" ZIndex="5" LightBackground="true"
                Style="display: flex; align-items: center; justify-content: center;">
        <MudProgressCircular Color="Color.Primary" Indeterminate="true" Size="Size.Large" />
    </MudOverlay>
    }
    <MudGrid Spacing="4">
        <MudItem xs="12" sm="6">
            <MudTextField  T="string" @bind-Value="UrlValue" Variant="Variant.Outlined" Disabled="ParserState.ParserIsNotSelected()" Placeholder="Unchanged" Label="URL"/>
        </MudItem>
        <MudItem xs="12" sm="6">    
            <MudTextField T="string" @bind-Value="BackupUrlValue" Variant="Variant.Outlined" Disabled="ParserState.ParserIsNotSelected()" Placeholder="Unchanged" Label="Backup URL"/>
        </MudItem>
        <MudItem xs="12" sm="6">
            <MudAutocomplete @bind-Value=SecretName
                             Clearable="true"
                             SearchFunc="@Search"
                             Variant="Variant.Outlined"
                             Label="Select AWS"
                             ResetValueOnEmptyText="true"
                             SelectValueOnTab="true"
                             Placeholder="@PlaceholderText"
                             Disabled="ParserState.ParserIsNotSelected()"
            />
            <MudStack Row="true" Style="margin-top: 0.4em; margin-bottom: 0.4em; align-items: center" Spacing="2">
                <MudIcon Icon="@Icons.Material.Filled.Info" Title="Info" Size="Size.Small" /> 
                <MudInputLabel >Need to add or update an AWS Secret?</MudInputLabel>
            </MudStack>
            <MudButton Variant="Variant.Outlined" Color="Color.Primary" Disabled="ParserState.ParserIsNotSelected()" OnClick="@(() => OpenSecretManagementDialog())">Manage Secret</MudButton>
        </MudItem>
        <MudItem xs="12" sm="6">
            <MudCard Elevation="0">
                <MudCardContent Style="padding: 0">
                    <MudText Typo="Typo.body2">Polling Frequency</MudText>
                    <MudTabs Elevation="0" Rounded="true" ApplyEffectsToContainer="true" MinimumTabWidth="80px" Centered="true"
                             @bind-ActivePanelIndex="_activeTabIndex" @bind-ActivePanelIndex:after="UpdatePollingValue" >
                        <MudTabPanel Text="Minutes" Disabled="@(ParserState.ParserIsNotSelected())">
                            <div style="min-height: 120px; margin-top: 0.5em; justify-content: center;">
                            <MudGrid Style="align-items: start; " Justify="Justify.Center">
                                <MudItem xs="3">
                                    <MudText>Every</MudText>
                                </MudItem>
                                <MudItem xs="4">
                                    <MudForm @bind-IsValid="@_success" @ref="@_form" >
                                    <MudTextField T="int" @bind-Value="SelectedMinutes" @bind-Value:after="UpdatePollingValue"
                                                  Variant="Variant.Outlined"
                                                  Validation="@(new Func<int, string>(ValidateMinutes))"
                                                  Immediate="true"
                                                  Disabled="@(ParserState.ParserIsNotSelected())"
                                                  FullWidth="true"
                                                  Style="height: 30px;"/>
                                    </MudForm>
                                </MudItem>
                                <MudItem xs="3">
                                    <MudText> @(SelectedMinutes == 1 ? "Minute" : "Minutes") </MudText        >                
                                </MudItem>
                            </MudGrid>
                            </div>
                        </MudTabPanel>
                        <MudTabPanel Text="Hours" Disabled="@(ParserState.ParserIsNotSelected())">
                            <div style="min-height: 120px; margin-top: 0.5em; justify-content: center;">
                                <MudGrid Style="align-items: start; " Justify="Justify.Center">
                                    <MudItem xs="3">
                                        <MudText>Every</MudText>
                                    </MudItem>
                                    <MudItem xs="4">
                                        <MudForm @bind-IsValid="@_success" @ref="@_form" >
                                        <MudTextField T="int" @bind-Value="SelectedHours" @bind-Value:after="UpdatePollingValue"
                                                      Variant="Variant.Outlined"
                                                      Validation="@(new Func<int, string>(ValidateHours))"
                                                      Immediate="true"
                                                      Disabled="@(ParserState.ParserIsNotSelected())"
                                                      FullWidth="true"
                                                      Style="height: 30px;"/>
                                        </MudForm>
                                    </MudItem>
                                    <MudItem xs="3">
                                        <MudText> @(SelectedHours == 1 ? "Hour" : "Hours") </MudText        >                
                                    </MudItem>
                                </MudGrid>
                            </div>
                            </MudTabPanel>
                        <MudTabPanel Text="Days" Disabled="@(ParserState.ParserIsNotSelected())">
                            <div style="min-height: 120px; margin-top: 0.5em; justify-content: center;">
                                <MudGrid Style="align-items: start; " Justify="Justify.Center">
                                    <MudItem xs="3">
                                        <MudText>Every</MudText>
                                    </MudItem>
                                    <MudItem xs="4">
                                        <MudForm @bind-IsValid="@_success" @ref="@_form" >
                                        <MudTextField T="int" @bind-Value="SelectedDays"  @bind-Value:after="UpdatePollingValue"
                                                      Variant="Variant.Outlined"
                                                      Immediate="true"
                                                      Required="true"
                                                      Disabled="@(ParserState.ParserIsNotSelected())"
                                                      Validation="@(new Func<int, string>(ValidateDays))"
                                                      FullWidth="true"
                                                      Style="height: 30px;"/>
                                        </MudForm>
                                    </MudItem>
                                    <MudItem xs="3">
                                        <MudText> @(SelectedDays == 1 ? "Day" : "Days") </MudText        >                
                                    </MudItem>
                                </MudGrid>
                            </div>
                        </MudTabPanel>
                    </MudTabs>
                </MudCardContent>
            </MudCard>
        </MudItem>
    </MudGrid>
    @if (_awsUsernamePasswordDebug)
    {
        <MudText>
            @Username
        </MudText>
        <MudText>
            @Password
        </MudText>
    }
    <MudGrid Class="d-flex justify-center" Style="margin-top: 0.3em">
        <MudItem>
            <MudButton Size="Size.Large" StartIcon="@Icons.Material.Filled.PublishedWithChanges" Disabled="ParserState.ParserIsNotSelected()" OnClick="@(() => TestConnection())" Variant="Variant.Filled" Color="Color.Primary">Test Connection</MudButton>
        </MudItem><MudItem>
            <MudButton Size="Size.Large" Variant="Variant.Filled" Color="Color.Primary" Disabled="@(!_success)" OnClick="@(() => UpdateDialogAsync())" >Update</MudButton>
        </MudItem>
    </MudGrid>
</div>