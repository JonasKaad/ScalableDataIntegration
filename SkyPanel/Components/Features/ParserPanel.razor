
@inject ISnackbar Snackbar

<MudInputLabel> Parser</MudInputLabel>
<MudGrid>
    <MudItem xs="12">
        <MudSelect T="string" Label="Search" AnchorOrigin="Origin.BottomCenter" TransformOrigin="Origin.BottomCenter" Variant="Variant.Outlined" AdornmentIcon="@Icons.Material.Filled.Search" AdornmentColor="Color.Primary">
            <MudSelectItem Value="@("foo")">Foo</MudSelectItem>
            <MudSelectItem Value="@("bar")">Bar</MudSelectItem>
        </MudSelect>
    </MudItem>
    <MudItem xs="12">
        <MudFileUpload T="IReadOnlyList<IBrowserFile>"
                       @ref="@_fileUpload"
                       OnFilesChanged="OnInputFileChanged"
                       AppendMultipleFiles
                       Hidden="@false"
                       InputClass="absolute mud-width-full mud-height-full overflow-hidden z-10"
                       InputStyle="opacity:0"
                       tabindex="-1"
                       @ondrop="@ClearDragClass"
                       @ondragenter="@SetDragClass"
                       @ondragleave="@ClearDragClass"
                       @ondragend="@ClearDragClass">
            <ActivatorContent>
                <MudPaper Height="300px"
                          Outlined="true"
                          Class="@_dragClass">
                    <MudText Typo="Typo.h6">
                        Drag and drop files here or click
                    </MudText>
                    @foreach (var file in _fileNames)
                    {
                        <MudChip T="string"
                                 Color="Color.Dark"
                                 Text="@file"
                                 tabindex="-1" />
                    }
                </MudPaper>
            </ActivatorContent>
        </MudFileUpload>
        @* <MudFileUpload T="IReadOnlyList<IBrowserFile>" AppendMultipleFiles="true" FilesChanged="UploadFiles" MaximumFileCount="100" multiple> *@
        @*     <ActivatorContent> *@
        @*         <MudButton Variant="Variant.Filled" *@
        @*                    Color="Color.Primary" *@
        @*                    StartIcon="@Icons.Material.Filled.CloudUpload"> *@
        @*             Upload Dataset *@
        @*         </MudButton> *@
        @*     </ActivatorContent> *@
        @*     <SelectedTemplate> *@
        @*         @if (context != null) *@
        @*         { *@
        @*             @foreach (var file in context) *@
        @*             { *@
        @*                 <MudText>@file.Name</MudText> *@
        @*                 <MudButton OnClick="() => { RemoveFile(file); }" >Delete</MudButton> *@
        @*             } *@
        @*             //FilePopUp(@context[0].Name); *@
        @*         } *@
        @*         else *@
        @*         { *@
        @*             <MudText>No File</MudText> *@
        @*         } *@
        @*     </SelectedTemplate> *@
        @* </MudFileUpload> *@
    </MudItem>
    <MudItem>
        @if (_fileNames != null)
        {
            <MudList T="string">
                @foreach (var file in _fileNames)
                {
                    <MudListItem Icon="@Icons.Material.Filled.AttachFile">
                        @file
                    </MudListItem>
                    <MudButton OnClick="() => { RemoveFileAsync(file); }" >Delete</MudButton>
                }
            </MudList>
            <MudButton OnClick="() => { ClearAsync(); }" >Clear All files</MudButton>
        }
    </MudItem>
</MudGrid>
@code {
    private void FilePopUp(string file) => Snackbar.Add($"Added file: {file}", Severity.Success );
}