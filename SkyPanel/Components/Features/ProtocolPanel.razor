@inject IDialogService DialogService

<MudGrid Spacing="4">
    <MudItem xs="12" sm="6">
        <MudText>Protocol</MudText>
        <MudToggleGroup T="string" SelectionMode="SelectionMode.SingleSelection" @bind-Value="@Protocol" Color="Color.Primary">
            <MudToggleItem Value="@("Http")" Text="HTTP"/>
            <MudToggleItem Value="@("Ftp")" Text="FTP"/>
        </MudToggleGroup>
    </MudItem>
    <MudItem xs="12" sm="6">    
        <MudTextField  T="string" @bind-Value="UrlValue" Variant="Variant.Outlined" Placeholder="Unchanged" Label="URL"/>
    </MudItem>
    <MudItem xs="12" sm="6">
        <MudAutocomplete @bind-Value=SecretName
                         Clearable="true"
                         SearchFunc="@Search"
                         Variant="Variant.Outlined"
                         Label="Select AWS"
                         ResetValueOnEmptyText="true"
                         SelectValueOnTab="true"
                         Placeholder="@PlaceholderText"
        />
        <MudStack Row="true" Style="margin-top: 0.4em; margin-bottom: 0.4em" Spacing="2">
            <MudIcon Icon="@Icons.Material.Filled.Info" Title="Info" Size="Size.Small" /> 
            <MudInputLabel>Need to add or update an AWS Secret?</MudInputLabel>
        </MudStack>
        <MudButton Variant="Variant.Outlined" Color="Color.Primary" OnClick="@(() => OpenSecretManagementDialog())">Manage Secret</MudButton>
    </MudItem>
    <MudItem xs="12" sm="6">
        @* <MudText>Polling</MudText> *@
        <MudTextField T="int" @bind-Value="PollingValue" Variant="Variant.Outlined" Placeholder="Unchanged" Label="Polling"/>
    </MudItem>
</MudGrid>
@if (_awsUsernamePasswordDebug)
{
    <MudText>
        @Username
    </MudText>
    <MudText>
        @Password
    </MudText>
}
<MudGrid Class="d-flex justify-center" Style="margin-top: 0.3em">
    <MudItem>
        <MudButton Size="Size.Large" StartIcon="@Icons.Material.Filled.PublishedWithChanges" Variant="Variant.Filled" Color="Color.Primary">Test Connection</MudButton>
    </MudItem><MudItem>
        <MudButton Size="Size.Large" Variant="Variant.Filled" Color="Color.Primary" >Update</MudButton>
    </MudItem>
</MudGrid>
@code {
    public string? UrlValue { get; set; }
    public int PollingValue { get; set; }
    private string? Protocol { get; set; }
    public string Username { get; set; } = string.Empty;
    public string Password { get; set; } = string.Empty;
    public string PlaceholderText { get; set; } = "No Secret Selected";
    
    private Task<IEnumerable<string>> Search(string value, CancellationToken token)
    {
        var allParserNames = CredentialsService.GetParserSecretNames();

        // if text is null or empty, return all parser names
        if (string.IsNullOrEmpty(value))
            return Task.FromResult(allParserNames);
    
        // Filter parser names based on the input value
        var filteredParsers = allParserNames
            .Where(key => key.Contains(value, StringComparison.InvariantCultureIgnoreCase));
        
        return Task.FromResult(filteredParsers);
    }
}
