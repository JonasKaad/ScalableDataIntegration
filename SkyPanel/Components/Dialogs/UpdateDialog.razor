@using MudBlazor.Charts
@inject ISnackbar Snackbar

@code{

    class Parameter
    {
        public string Label { get; set; }
        public object Name { get; set; }
        public object State { get; set; }
        public bool Unchanged { get; set; }
    }

}

<MudDialog>
    <DialogContent>
        @{
            var parameters = new List<Parameter> {
                new (){ Label = "URL", Name = Url, State = ParserState.DownloadUrl, Unchanged = (String.Compare(Url, ParserState.DownloadUrl, StringComparison.Ordinal) == 0)},
                new (){ Label = "BackupURL", Name = BackupUrl, State = ParserState.BackupUrl, Unchanged = (String.Compare(BackupUrl, ParserState.BackupUrl, StringComparison.Ordinal) == 0) },
                new (){ Label = "Secret", Name = SecretName, State = ParserState.SecretName, Unchanged = (String.Compare(SecretName, ParserState.SecretName, StringComparison.Ordinal) == 0) },
                new (){ Label = "Polling Rate", Name = PollingRate, State = ParserState.Polling, Unchanged = (String.Compare(PollingRate, ParserState.Polling, StringComparison.Ordinal) == 0) },
                new (){ Label = "Filters", Name = Filters, State = ParserState.Filters, Unchanged = AreFiltersEqual(Filters, ParserState.Filters) },
            };
            var changedParams = parameters.Where(p => !p.Unchanged).ToList();
            var unchangedParams = parameters.Where(p => p.Unchanged).ToList();
            HasChanges = changedParams.Count > 0;
        }
            @if (HasChanges)
            {
                <MudText Typo="Typo.body2">
                    This action will update the following
                    @(changedParams.Count > 1 ? "parameters:" : "parameter:")
                </MudText>
            }
            else
            {
                <MudText Typo="Typo.body2">No changes will be made as all parameters remain unchanged.</MudText>
            }
        <MudList T="string" CheckedIcon="true" ReadOnly="true">
            @foreach (var parameter in changedParams)
                {
                    <MudListItem>
                        <div class="d-flex flex-column">
                            <MudText Typo="Typo.subtitle1">@parameter.Label</MudText>
                            @if ((parameter.State is string stateString && string.IsNullOrEmpty(stateString)) || (parameter.State is List<object> stateList && stateList.Any()))
                            {
                                <MudText Typo="Typo.body2">From: None</MudText>
                            }
                            else
                            {
                                <MudText Typo="Typo.body2">From: @((MarkupString)HighlightChangedContent(parameter.State, parameter.Name,  "#ffcccc"))</MudText>
                            }
                            <MudText Typo="Typo.body2">To: @((MarkupString)HighlightChangedContent( parameter.Name,parameter.State, "#d0f0c0"))</MudText>
                        </div>
                    </MudListItem>
                }

                @if (changedParams.Count > 0 && unchangedParams.Count > 0)
                {
                    <MudDivider Class="my-2"/>
                }

                @foreach (var parameter in unchangedParams)
                {
                    <MudListItem>
                        <div class="d-flex flex-column">
                            <MudText Typo="Typo.subtitle1">@parameter.Label</MudText>
                            <MudText Typo="Typo.body2" Style="font-style: italic">Unchanged</MudText>
                        </div>
                    </MudListItem>
                }
        </MudList>

    </DialogContent>
    <DialogActions>
        <MudButton OnClick="@DialogCancel" Variant="Variant.Filled">Cancel</MudButton>
        <MudSpacer/>
        <MudButton StartIcon="@Icons.Material.Filled.PublishedWithChanges" Disabled="@(!HasChanges)" OnClick="@TestConnection" Variant="Variant.Filled" Color="Color.Primary">Test Connection</MudButton>
        <MudButton Color="@Color.Success" OnClick="@DialogSubmit" Disabled="@(!HasChanges)" Variant="Variant.Filled">Confirm</MudButton>
    </DialogActions>
</MudDialog>