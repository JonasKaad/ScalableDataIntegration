@inherits LayoutComponentBase

<MudThemeProvider Theme="@_theme" IsDarkMode="_isDarkMode" />
<MudPopoverProvider />
<MudDialogProvider />
<MudSnackbarProvider />
<MudLayout>
    <MudAppBar Elevation="1">
        <MudIconButton Icon="@Icons.Material.Filled.Menu" Color="Color.Inherit" Edge="Edge.Start" OnClick="@(() => DrawerToggle())" />
        <MudImage Src="images/foreflight_logo.png" Width="56" Height="56"/>
        <MudText Typo="Typo.h5" Class="ml-3">Data Integration Service — SkyPanel</MudText>
        <MudSpacer />
        
        <MudText Typo="Typo.body1" >@_theTime</MudText>
        <MudIconButton Icon="@(DarkLightModeButtonIcon)" Color="Color.Inherit" OnClick="@DarkModeToggle" />
        <MudIconButton Icon="@Icons.Material.Outlined.AccountCircle" Color="Color.Inherit" Href="profile" />
        <MudMenu Icon="@Icons.Material.Filled.MoreVert" Color="Color.Inherit" Edge="Edge.End" AnchorOrigin="Origin.BottomRight" TransformOrigin="Origin.TopRight">
            <AuthorizeView>
                <Authorized>
                    <MudMenuItem Href="Account/Logout">
                        <div class="d-flex align-center">
                            <MudIcon Size="Size.Small" Icon="@Icons.Material.Filled.Logout" Class="mr-2"/>
                            Log Out
                        </div>
                    </MudMenuItem>
                </Authorized>
                <NotAuthorized>
                    <MudMenuItem Href="Account/Login">
                        <div class="d-flex align-center">
                            <MudIcon Size="Size.Small" Icon="@Icons.Material.Filled.Login" Class="mr-2"/>
                            Log In
                        </div>
                    </MudMenuItem>
                </NotAuthorized>
            </AuthorizeView>
            <MudDivider />
            <MudMenuItem Disabled="true">
                <div class="d-flex align-center">
                    <MudIcon Size="Size.Small" Icon="@Icons.Material.Filled.Settings" Class="mr-2"/>
                    Settings
                </div>
            </MudMenuItem>
            <MudMenuItem Href="https://www.youtube.com/watch?v=xvFZjo5PgG0">
                <div class="d-flex align-center">
                    <MudIcon Size="Size.Small" Icon="@Icons.Material.Filled.Info" Class="mr-2"/>
                    About
                </div>
            </MudMenuItem>
        </MudMenu>
    </MudAppBar>
    <MudDrawer id="nav-drawer" @bind-Open="_drawerOpen" ClipMode="DrawerClipMode.Always" Elevation="2">
        <NavMenu />
    </MudDrawer>
    <CascadingValue Value="_isDarkMode">
        <MudMainContent Class="mt-16 pa-4">
            @Body
        </MudMainContent>
    </CascadingValue>
</MudLayout>


<div id="blazor-error-ui" data-nosnippet>
    An unhandled error has occurred.
    <a href="." class="reload">Reload</a>
    <span class="dismiss">🗙</span>
</div>

@code {
    private bool _drawerOpen = true;
    private bool _isDarkMode;
    private MudTheme? _theme;

    protected override void OnInitialized()
    {
        base.OnInitialized();
        
        _aTimer = new Timer(Tick!, null, 0, 1000);        

        _theme = new()
        {
            PaletteLight = _lightPalette,
            PaletteDark = _darkPalette,
            LayoutProperties = new LayoutProperties()
        };
    }

    private void DrawerToggle()
    {
        _drawerOpen = !_drawerOpen;
    }

    private void DarkModeToggle()
    {
        _isDarkMode = !_isDarkMode;
    }

    private readonly PaletteLight _lightPalette = new()
    {
        Primary = "#880088",
        Black = "#110e2d",
        AppbarText = "#ffffff",
        AppbarBackground = "rgba(136,0,136,1)",
        DrawerBackground = "#ffffff",
        GrayLight = "#e8e8e8",
        GrayLighter = "#f9f9f9",
    };

    private readonly PaletteDark _darkPalette = new()
    {
        Primary = "#880088",
        Surface = "#28283c",
        Background = "#242436",
        BackgroundGray = "#151521",
        AppbarText = "#ffffff",
        AppbarBackground = "rgba(136,0,136,1)",
        DrawerBackground = "#242436",
        ActionDefault = "#74718e",
        ActionDisabled = "#9999994d",
        ActionDisabledBackground = "#605f6d4d",
        TextPrimary = "#ffffff",
        TextSecondary = "#bbbbc3",
        TextDisabled = "#ffffff33",
        DrawerIcon = "#bbbbc3",
        DrawerText = "#bbbbc3",
        GrayLight = "#2a2833",
        GrayLighter = "#28283c",
        Info = "#4a86ff",
        Success = "#3dcb6c",
        Warning = "#ffb545",
        Error = "#ff3f5f",
        LinesDefault = "#33323e",
        TableLines = "#33323e",
        Divider = "#292838",
        OverlayLight = "#1e1e2d80",
    };

    public string DarkLightModeButtonIcon => _isDarkMode switch
    {
        true => Icons.Material.Filled.LightMode,
        false => Icons.Material.Outlined.DarkMode,
    };
    
    string? _theTime;    
    Timer? _aTimer;
    
    private void Tick(object _)
    {
        _theTime = DateTime.UtcNow.ToString("HH:mm:ss") + "Z";
        InvokeAsync(StateHasChanged);
    }

    public void Dispose()
    {
        _aTimer?.Dispose();
    }
    
}