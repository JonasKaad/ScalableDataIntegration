@page "/graphs"
@attribute [Authorize(Roles = "Admin, Developer")]
@using ApexCharts
@using Color = MudBlazor.Color
@using Size = MudBlazor.Size
<style>
    .apexcharts-datalabel {
        font-size: 14px;
        font-weight: 700;
        color: #555 !important;
        fill: #555 !important;
    }
</style>
<PageTitle>SkyPanel — Graphs</PageTitle>
<MudContainer MaxWidth="MaxWidth.Large" Class="mt-4">
    <MudGrid Justify="Justify.Center">
        <MudItem xs="12" sm="4">
            <MudPaper Elevation="3" Class="pa-8 ma-2" Style="border-radius: 16px;">
                <MudStack Row="true" AlignItems="AlignItems.Center" Class="mb-4">
                    <MudText Typo="Typo.h5">Parser</MudText>
                </MudStack>

                <MudStack Spacing="3">
                    <MudSelect T="string"
                               Label="Parsers"
                               MultiSelection="true"
                               SelectedValues="_selectedParsers"
                               SelectedValuesChanged="AddParser"
                               Variant="Variant.Outlined"
                               Class="mb-1">
                        @foreach (var parser in _parsers)
                        {
                            <MudSelectItem T="string" Value="@parser">@parser</MudSelectItem>
                        }
                    </MudSelect>

                    <MudAlert Severity="Severity.Info" Dense="true" Icon="@Icons.Material.Filled.Info" Variant="Variant.Outlined" Class="mb-4">
                        Showing parsers with downloaded data in the last 14 days
                    </MudAlert>
                    <MudStack Row="true" Class="mb-2">
                            <MudTooltip Text="Fetch all parsers with data from the database">
                                <MudButton Variant="Variant.Outlined"
                                           Color="Color.Primary"
                                           FullWidth="true"
                                           OnClick="@(() => FetchDataFromDb(DateTime.Parse("2023-01-01").ToUniversalTime()))"
                                           StartIcon="@Icons.Material.Filled.History"
                                           Size="Size.Medium">
                                    Fetch All Data
                                </MudButton>
                            </MudTooltip>
                        <MudSpacer/>
                        <MudTooltip Text="Refresh with latest data">
                            <MudButton Variant="Variant.Filled"
                                       Color="Color.Primary"
                                       FullWidth="true"
                                       OnClick="@RefreshData"
                                       Size="Size.Medium"
                                       StartIcon="@Icons.Material.Filled.Refresh">
                                Refresh
                            </MudButton>
                        </MudTooltip>
                    </MudStack>
                </MudStack>
            </MudPaper>
        </MudItem>
        <MudItem xs="12" sm="6">
            <MudPaper Elevation="3" Class="pa-8 ma-2" Style="border-radius: 16px;">
                <MudText Typo="Typo.h5" Class="mb-4">Filters</MudText>
                <MudItem xs="12" sm="12">
                    <MudStack>
                        <MudGrid xs="12">
                            <MudItem xs="6" sm="6" Class="mb-2">
                                <MudDateRangePicker PickerVariant="PickerVariant.Inline" Label="Date Range" Editable="true" @bind-DateRange="Date" Placeholder="Select Date"/>
                            </MudItem>
                            <MudItem xs="5" sm="5">
                                <MudGrid>
                                    <MudItem xs="6">
                                        <MudTimePicker Label="From" Editable="true" @bind-Time="_fromTime"/>
                                    </MudItem>
                                    <MudItem xs="6">
                                        <MudTimePicker Label="To" Editable="true" @bind-Time="_toTime"/>
                                    </MudItem>
                                </MudGrid>
                            </MudItem>
                            <MudItem xs="6">
                                <MudSelect
                                    Label="Data grouping"
                                    Dense="true"
                                    Variant="Variant.Filled"
                                    @bind-Value="_groupSpan">
                                    <MudSelectItem Value="@(new TimeSpan(0, 15, 0))">15 Minutes</MudSelectItem>
                                    <MudSelectItem Value="@(new TimeSpan(1, 0, 0))">1 Hour</MudSelectItem>
                                    <MudSelectItem Value="@(new TimeSpan(6, 0, 0))">6 Hours</MudSelectItem>
                                    <MudSelectItem Value="@(new TimeSpan(24, 0, 0))">1 day</MudSelectItem>
                                    <MudSelectItem Value="@(new TimeSpan(24 * 7, 0, 0))">1 week</MudSelectItem>
                                </MudSelect>
                            </MudItem>
                            <MudItem xs="6">
                                <MudSelect
                                    Dense="true"
                                    Label="Y-axis"
                                    Variant="Variant.Filled"
                                    @bind-Value="_yaxis">
                                    <MudSelectItem Value="Amount.Byte">Bytes</MudSelectItem>
                                    <MudSelectItem Value="Amount.Kilo">Kilobytes</MudSelectItem>
                                    <MudSelectItem Value="Amount.Mega">Megabytes</MudSelectItem>
                                    <MudSelectItem Value="Amount.Giga">Gigabytes</MudSelectItem>
                                </MudSelect>
                            </MudItem>
                            <MudItem xs="6">
                                <MudButton Variant="Variant.Filled"Class="ma-2" OnClick="Zoom">Apply Filter</MudButton>
                            </MudItem>
                        </MudGrid>
                    </MudStack>
                </MudItem>
            </MudPaper>
        </MudItem>

        <MudItem xs="12" sm="12">
            @if (_loading)
            {
                <MudPaper Class="pa-8 ma-2 d-flex justify-center">
                    <MudProgressCircular Color="Color.Primary" Indeterminate="true" Size="Size.Large"/>
                </MudPaper>
            }
            else
            {
                <div style="position: relative;">
                    <MudPaper Class="pa-8 ma-2">
                        @if (_refreshing)
                        {
                            <MudOverlay Visible="true" Absolute="true" ZIndex="5" LightBackground="true">
                                <MudProgressCircular Color="Color.Primary" Indeterminate="true" Size="Size.Large" />
                            </MudOverlay>
                        }
                        <ApexChart TItem="ParserData"
                                   Options=_options
                                   Title="Downloaded data amount" @ref="Chart"
                                   XAxisType="XAxisType.Datetime">
                            <ApexPointTooltip>
                                <div class="ma-2">
                                    @{
                                        var point = (DataPoint<ParserData>)context.DataPoint;
                                        <h3>@_selected.ToList()[context.SeriesIndex]</h3>
                                        <p>Time: @point.X</p>
                                        <p>Downloaded: @point.Y @_amount</p>
                                    }
                                </div>
                            </ApexPointTooltip>
                            <ChildContent>
                                @foreach (string parser in _selected)
                                {
                                    <ApexPointSeries TItem="ParserData"
                                                     Items="@_parserData[@parser]"
                                                     Name="@parser"
                                                     SeriesType="SeriesType.Bar"
                                                     XValue="e => e.Time"
                                                     YAggregate="e => Math.Round(e.Sum(es => es.DownloadedBytes), 5)"
                                                     OrderByDescending="e => e.X"
                                                     ShowDataLabels/>
                                }
                            </ChildContent>
                        </ApexChart>
                    </MudPaper>
                </div>
            }
        </MudItem>
    </MudGrid>
</MudContainer>